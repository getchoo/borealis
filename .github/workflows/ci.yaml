name: CI

on:
  pull_request:
  workflow_call:
    secrets:
      CACHIX_AUTH_TOKEN:
        description: "Auth token for cachix"
  workflow_dispatch:

jobs:
  build:
    name: Build outputs
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v9

      - name: Setup Cachix
        uses: cachix/cachix-action@v13
        with:
          name: getchoo
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Run build
        run: |
          args=(
            --inputs-from .
            --override-input nixpkgs nixpkgs
            github:Mic92/nix-fast-build --
            --no-nom
            --skip-cached
            --option accept-flake-config true
            --flake '.#hydraJobs'
          )

          nix run "${args[@]}"

  check:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    name: Check flake (${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v9

      - name: Setup Cachix
        uses: cachix/cachix-action@v13
        with:
          name: getchoo
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Run check
        run: |
          args=(
            --print-build-logs
            --show-trace
            --accept-flake-config
            --allow-import-from-derivation
          )

          nix flake check "${args[@]}"

  gate:
    needs: [build, check]

    name: CI Gate
    runs-on: ubuntu-latest

    if: always()

    steps:
      - name: Exit with result
        run: |
          results=(
            "${{ needs.build.result }}"
            "${{ needs.check.result }}"
          )

          for result in "${results[@]}"; do [ "$result" != "success" ] && exit 1; done
          exit 0
