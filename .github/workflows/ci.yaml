name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  evaluate:
    name: Evaluate Nix matrix

    runs-on: ubuntu-24.04-arm

    outputs:
      matrix: ${{ steps.evaluate-matrix.outputs.matrix }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v31

      - name: Evaluate matrix
        id: evaluate-matrix
        run: |
          echo "matrix=$(nix eval --json '.#githubActions.matrix')" >> "$GITHUB_OUTPUT"

  build:
    name: Build (${{ matrix.attr }})

    needs: [ evaluate ]

    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.evaluate.outputs.matrix) }}

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v31

      - name: Setup Cachix
        uses: cachix/cachix-action@v16
        with:
          name: getchoo
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

        # Only required for building Lix
        # TODO: Remove after https://git.lix.systems/lix-project/lix/issues/545 is fixed
      - name: Loosen AppArmor Restrictions
        run: |
          sudo sysctl -w kernel.apparmor_restrict_unprivileged_unconfined=0
          sudo sysctl -w kernel.apparmor_restrict_unprivileged_userns=0

      - name: Build attribute
        env:
          ATTR: ${{ matrix.attr }}
        run: |
          nix build ".#$ATTR" \
            --fallback \
            --no-allow-import-from-derivation \
            --print-build-logs

  build-gate:
    name: Build gate

    if: ${{ always() }}
    needs: [ build ]

    runs-on: ubuntu-latest

    steps:
      - name: Exit with error
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        run: |
          exit 1
