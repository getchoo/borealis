name: CI

on:
  pull_request:
  workflow_call:
    secrets:
      CACHIX_AUTH_TOKEN:
        description: "auth token for cachix"
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    name: Build outputs (${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v9

      - name: Setup Cachix
        uses: cachix/cachix-action@v13
        with:
          name: getchoo
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Run build
        run: |
          nix run \
            --inputs-from . \
            nixpkgs#nixci

  check:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    name: Check flake (${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v9

      - name: Setup Cachix
        uses: cachix/cachix-action@v13
        with:
          name: getchoo
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Run check
        run: |
          nix flake check \
            --print-build-logs \
            --show-trace

  gate:
    needs: [build, check]

    name: CI Gate
    runs-on: ubuntu-latest

    if: always()

    steps:
      - name: Exit with result
        run: |
          build_result="${{ needs.build.result }}"
          check_result="${{ needs.check.result }}"
          results=("$build_result" "$check_result")

          for result in "${results[@]}"; do [ "$result" != "success" ] && exit 1; done
          exit 0
